<?php

/**
 * @file
 * Vagovadmin.theme.
 */

/**
 * Implements hook_preprocess_HOOK().
 */
function vagovadmin_preprocess_node(&$variables) {
  /** @var \Drupal\node\Entity\Node $node */
  $node = $variables['node'];
  /** @var \Drupal\user\UserInterface $author */
  $author = $node->getRevisionAuthor();
  $variables['revision_author'] = $author->getAccountName();
  $variables['status'] = 'Unpublished Content';
  if ($node->isDefaultRevision() && $node->isPublished()) {
    $variables['status'] = 'Published Content';
  }
  else {
    $node_storage = \Drupal::entityTypeManager()->getStorage('node');
    $query = $node_storage->getQuery()
      ->condition($node->getEntityType()->getKey('id'), $node->id())
      ->allRevisions()
      ->sort($node->getEntityType()->getKey('revision'), 'DESC')
      ->accessCheck(FALSE)
      ->execute();
    $vids = array_keys($query);
    foreach ($vids as $vid) {
      if ($vid !== $node->getRevisionId()) {
        /** @var \Drupal\Core\Entity\ContentEntityInterface $revision */
        if ($revision = $node_storage->loadRevision($vid)) {
          if ($revision->isDefaultRevision() && $revision->get('status')->value) {
            $variables['status'] = 'Draft of Published Content';
            break;
          }
        }
      }
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function vagovadmin_preprocess_paragraph(&$variables) {
  /** @var \Drupal\paragraphs\Entity\Paragraph $paragraph */
  $paragraph = $variables['paragraph'];

  $variables['paragraph_name'] = $paragraph->type->entity->label();

  if ($paragraph->getType() === 'q_a') {
    $variables['as_accordion'] = FALSE;
    $parent = $paragraph->getParentEntity();
    if ($parent->bundle() === 'q_a_section') {
      $variables['as_accordion'] = $parent->field_accordion_display->value;
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function vagovadmin_preprocess_field(&$variables) {
  $element = $variables['element'];
  $field_defs = \Drupal::service('entity_field.manager')
    ->getFieldDefinitions($element['#entity_type'], $element['#bundle']);
  /** @var \Drupal\Core\Field\BaseFieldDefinition $field_def */
  $field_def = $field_defs[$element['#field_name']];
  $variables['description'] = str_replace('"', "'", $field_def->getDescription());
}
